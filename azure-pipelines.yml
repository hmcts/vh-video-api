# Set variables once
variables:
  solutionType: DotNetCore # angularDotNetCore, dotNetCore, angular
  apiDirectory: 'VideoAPI/Video.API'
  sonarCloudExtraProperties: |
    sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)\Coverage\coverage.opencover.xml
    sonar.coverage.exclusions=**/Program.cs, **/Startup.cs, **/Video.API/Extensions/**, **/Video.API/Swagger/**, **/Video.API/ConfigureServicesExtensions.cs, **/Testing.Common/**, **/Testing.Common/Helper/, **/Testing.Common/Helper/Builders/Api, **/Testing.Common/Helper/Builders/Domain, **/VideoApi.Common/**, **/VideoApi.DAL/Mappings/**, **/VideoApi.DAL/SeedData/**, **/VideoApi.DAL/VideoApiDbContext.cs, **/VideoApi.DAL/**/DesignTimeHearingsContextFactory.cs, **/VideoApi.DAL/Migrations/**, **/VideoApi.Domain/Ddd/**, **/VideoApi.Domain/Validations/**, **/VideoApi.Services/**, **/VideoApi.Events/Hub/EventHubClient.cs, **/Video.API/KinlyApiTokenDelegatingHandler.cs
    sonar.cpd.exclusions="**/VideoApi.DAL/Migrations/**"
  coverletCoverageExclusions: '[*]Video.API.Extensions.*,[Video.API]Video.API.ConfigureServicesExtensions,[Video.API]Video.API.Startup,[Video.API]Video.API.Program,[*]Video.API.Swagger.*,[VideoApi.*Tests?]*,[*]VideoApi.DAL.SeedData.*,[*]VideoApi.DAL.Migrations.*,[*]VideoApi.DAL.Mappings.*,[*]VideoApi.Domain.Ddd.*,[*]VideoApi.Domain.Validations.*,[VideoApi.DAL]VideoApi.DAL.VideoApiDbContext,[VideoApi.DAL]VideoApi.DAL.DesignTimeHearingsContextFactory,[*]VideoApi.Common.*,[*]Testing.Common.*'
  integrationTestsAppSettingsTransform: '
    "AzureAd/TenantId":"$(tenantid)",
    "AzureAd/ClientId":"$(vh-video-api-appid)",
    "AzureAd/ClientSecret":"$(vh-video-api-key)",
    "ServiceBusQueue/ConnectionString":"$(AzureServiceBusConnectionStringSend)",
    "Services/KinlyApiUrl":"$(KinlyApiUrl)",
    "Services/KinlySelfTestApiUrl":"$(KinlySelfTestApiUrl)",
    "Services/CallbackUri":"$(CallbackUri)",
    "Services/PexipNode":"$(PexipNode)",
    "Services/ConferenceUsername":"$(ConferenceUsername)",
    "Services/PexipSelfTestNode":"$(PexipSelfTestNode)",
    "Services/UserApiUrl":"$(UserApiUrl)",
    "Services/UserApiResourceId":"$(vh-user-api-identifieruris)",
    "Services/VhVideoApiResourceId":"$(vh-video-api-identifieruris)",
    "Services/VhVideoWebClientId":"$(vh-video-web-appid)",
    "WowzaConfiguration/RestApiEndpoint":"$(wowza_restApiEndpoint)",
    "WowzaConfiguration/StreamingEndpoint":"$(wowza_streamingEndpoint)",
    "WowzaConfiguration/ServerName":"$(wowza_serverName)",
    "WowzaConfiguration/HostName":"$(wowza_hostName)",
    "WowzaConfiguration/Username":"$(wowza_userName)",
    "WowzaConfiguration/Password":"$(wowza_password)",
    "WowzaConfiguration/StorageDirectory":"$(wowza_storageDirectory)",
    "WowzaConfiguration/StorageAccountName": "$(wowza_storageAccountName)", 
    "WowzaConfiguration/StorageAccountKey": "$(wowza_storageAccountKey)",
    "WowzaConfiguration/StorageContainerName": "$(wowza_storageContainerName)"
    '
  dalWorkingDirectory: 'VideoAPI/VideoApi.DAL'
  keyVaultName: vhcoreinfrahtdev # Used to get secrets for integration tests
  secretsFilter: 'vh-admin-web-appid,vh-admin-web-key,tenantid,vh-video-api-identifieruris,vh-video-web-appid,vh-video-api-appid,vh-video-api-key,vh-user-api-identifieruris' # filters out secrets returned from key vault
  infraKeyVaultName: 'vhcoreinfradev'
  infraSecretsFilter: 'vh-core-infra-AppInsightsKey,VhVideoDatabaseConnectionString,AzureServiceBusConnectionStringSend'

# GitHub Repo that conatins build templates. Reference https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=vsts#using-other-repositories
resources:
  repositories:
  - repository: azureDevOpsTemplates
    type: github
    name: hmcts/azure-devops-templates
    ref: refs/heads/master # ref name to use, defaults to 'refs/heads/master'
    endpoint: hmcts

trigger:
  branches:
    include:
    - master
    - release/*
    - hotfix/*
    
pr:
  - master

jobs:
  
- template: jobs/angularDotNetCore.yml@azureDevOpsTemplates # Template reference
  parameters:
    sonarCloudExtraProperties: $(sonarCloudExtraProperties)
    integrationTestsAppSettingsTransform: $(integrationTestsAppSettingsTransform)
    coverletCoverageExclusions: $(coverletCoverageExclusions)
    apiDirectory: $(apiDirectory)
    dalWorkingDirectory: $(dalWorkingDirectory)
    keyVaultName: $(keyVaultName)
    secretsFilter: $(secretsFilter),
    infraKeyVaultName: $(infraKeyVaultName)
    infraSecretsFilter: $(infraSecretsFilter)
    dotNetCoreVersion: '3.1.100'

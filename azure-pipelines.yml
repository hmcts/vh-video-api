# Set variables once
variables:
  - group: vh-wowza-dev
  - group: cvp-wowza-sbox
  - group: KinlyConfiguration_Test
  - name: solutionType
    value : DotNetCore # angularDotNetCore, dotNetCore, angular
  - name: apiDirectory
    value : 'VideoAPI/Video.API'
  - name: sonarCloudExtraProperties
    value : |
      sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)\Coverage\coverage.opencover.xml
      sonar.scanner.force-deprecated-java-version-grace-period=true
      sonar.coverage.exclusions=**/Program.cs, **/Startup.cs, **/Video.API/Extensions/**, **/Video.API/Swagger/**, **/Video.API/ConfigureServicesExtensions.cs, **/Testing.Common/**, **/Testing.Common/Helper/, **/Testing.Common/Helper/Builders/Api, **/Testing.Common/Helper/Builders/Domain, **/VideoApi.Common/**, **/VideoApi.DAL/Mappings/**, **/VideoApi.DAL/SeedData/**, **/VideoApi.DAL/VideoApiDbContext.cs, **/VideoApi.DAL/**/DesignTimeHearingsContextFactory.cs, **/VideoApi.DAL/Migrations/**, **/VideoApi.Domain/Ddd/**, **/VideoApi.Domain/Validations/**, **/VideoApi.Services/**, **/VideoApi.Events/Hub/EventHubClient.cs, **/Video.API/KinlyApiTokenDelegatingHandler.cs
      sonar.cpd.exclusions="**/VideoApi.DAL/Migrations/**"
  - name: coverletCoverageExclusions
    value : '[*]Video.API.Extensions.*,[Video.API]Video.API.ConfigureServicesExtensions,[Video.API]Video.API.Startup,[Video.API]Video.API.Program,[*]Video.API.Swagger.*,[VideoApi.*Tests?]*,[*]VideoApi.DAL.SeedData.*,[*]VideoApi.DAL.Migrations.*,[*]VideoApi.DAL.Mappings.*,[*]VideoApi.Domain.Ddd.*,[*]VideoApi.Domain.Validations.*,[VideoApi.DAL]VideoApi.DAL.VideoApiDbContext,[VideoApi.DAL]VideoApi.DAL.DesignTimeHearingsContextFactory,[*]VideoApi.Common.*,[*]Testing.Common.*'
  - name: integrationTestsAppSettingsTransform
    value : '
      "AzureAd/TenantId":"$(tenantid)",
      "AzureAd/ClientId":"$(vh-video-api-appid)",
      "AzureAd/ClientSecret":"$(vh-video-api-key)",
      "ServiceBusQueue/ConnectionString":"$(AzureServiceBusConnectionStringSend)",
      "Services/KinlyApiUrl":"$(KinlyApiUrl)",
      "Services/KinlySelfTestApiUrl":"$(KinlySelfTestApiUrl)",
      "Services/CallbackUri":"$(CallbackUri)",
      "Services/PexipNode":"$(PexipNode)",
      "Services/ConferenceUsername":"$(ConferenceUsername)",
      "Services/PexipSelfTestNode":"$(PexipSelfTestNode)",
      "Services/UserApiUrl":"$(UserApiUrl)",
      "Services/UserApiResourceId":"$(vh-user-api-identifieruris)",
      "Services/VhVideoApiResourceId":"$(vh-video-api-identifieruris)",
      "Services/VhVideoWebClientId":"$(vh-video-web-appid)",
      "WowzaConfiguration/RestApiEndpoints":"$(wowza_restApiEndpoints)",
      "WowzaConfiguration/StreamingEndpoint":"$(wowza_streamingEndpoint)",
      "WowzaConfiguration/ServerName":"$(wowza_serverName)",
      "WowzaConfiguration/HostName":"$(wowza_hostName)",
      "WowzaConfiguration/Username":"$(wowza_userName)",
      "WowzaConfiguration/Password":"$(wowza_password)",
      "WowzaConfiguration/StorageDirectory":"$(wowza_storageDirectory)",
      "WowzaConfiguration/StorageAccountName":"$(wowza_storageAccountName)",
      "WowzaConfiguration/StorageAccountKey":"$(wowza_storageAccountKey)",
      "WowzaConfiguration/StorageContainerName":"$(wowza_storageContainerName)",
      "WowzaConfiguration/StorageEndpoint":"$(wowza_storageEndpoint)",
      "WowzaConfiguration/ManagedIdentityClientId":"$(wowza_managedIdentityClientId)",
      "CvpConfiguration/StorageAccountName":"$(cvp_storageAccountName)",
      "CvpConfiguration/StorageAccountKey":"$(cvp_storageAccountKey)",
      "CvpConfiguration/StorageContainerName":"$(cvp_storageContainerName)",
      "CvpConfiguration/StorageEndpoint":"$(cvp_storageEndpoint)",
      "CvpConfiguration/ManagedIdentityClientId":"$(wowza_managedIdentityClientId)",
      "KinlyConfiguration:ConferencePhoneNumber":"$(ConferencePhoneNumber)"
      '
  - name: dalWorkingDirectory
    value : 'VideoAPI/VideoApi.DAL'
  - name: keyVaultName
    value : vhcoreinfrahtdev # Used to get secrets for integration tests
  - name: secretsFilter
    value : 'vh-admin-web-appid,vh-admin-web-key,tenantid,vh-video-api-identifieruris,vh-video-web-appid,vh-video-api-appid,vh-video-api-key,vh-user-api-identifieruris' # filters out secrets returned from key vault
  - name: infraKeyVaultName
    value : 'vhcoreinfradev'
  - name: infraSecretsFilter
    value : 'vh-core-infra-AppInsightsKey,VhVideoDatabaseConnectionString,AzureServiceBusConnectionStringSend'

# GitHub Repo that conatins build templates. Reference https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=vsts#using-other-repositories
resources:
  repositories:
  - repository: azureDevOpsTemplates
    type: github
    name: hmcts/azure-devops-templates
    ref: refs/heads/master # ref name to use, defaults to 'refs/heads/master'
    endpoint: hmcts_shaed

trigger:
  branches:
    include:
    - master
    - release/*
    - hotfix/*
    
pr:
  - master

jobs:
  
- template: jobs/angularDotNetCore.yml@azureDevOpsTemplates # Template reference
  parameters:
    sonarCloudExtraProperties: $(sonarCloudExtraProperties)
    integrationTestsAppSettingsTransform: $(integrationTestsAppSettingsTransform)
    coverletCoverageExclusions: $(coverletCoverageExclusions)
    apiDirectory: $(apiDirectory)
    dalWorkingDirectory: $(dalWorkingDirectory)
    keyVaultName: $(keyVaultName)
    secretsFilter: $(secretsFilter),
    infraKeyVaultName: $(infraKeyVaultName)
    infraSecretsFilter: $(infraSecretsFilter)
    dotNetCoreVersion: '3.1.100'

{
  "swagger": "2.0",
  "info": {
    "title": "Virtual Courtroom API",
    "version": "0.0.5",
    "description": "API for virtual court hearings"
  },
  "schemes": [
    "https"
  ],
  "basePath": "/virtual-court/api/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/hearing": {
      "post": {
        "operationId": "createHearing",
        "description": "Create a new hearing",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "name": "CreateHearingParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createHearingParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Hearing created",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Path"
              }
            },
            "schema": {
              "$ref": "#/definitions/hearing"
            }
          },
          "409": {
            "description": "Meeting room already exists"
          }
        }
      },
      "get": {
        "operationId": "getHearings",
        "description": "Get multiple hearings",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "judge",
            "required": false,
            "type": "integer",
            "description": "Filter hearings on judge id takes precedence over admin"
          },
          {
            "in": "query",
            "name": "admin",
            "required": false,
            "type": "integer",
            "description": "Filter hearings on admin id"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hearings",
            "schema": {
              "type": "object",
              "required": [
                "hearings"
              ],
              "properties": {
                "hearings": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/hearing"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hearing/{virtual_courtroom_id}": {
      "get": {
        "operationId": "getHearing",
        "description": "Get single hearing",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Hearing object",
            "schema": {
              "$ref": "#/definitions/hearing"
            }
          },
          "404": {
            "description": "Hearing does not exist"
          }
        }
      },
      "patch": {
        "operationId": "updateHearing",
        "description": "Update single hearing",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          },
          {
            "name": "UpdateHearingParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateHearingParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Hearing does not exist - Invalid virtual_courtroom_id. (When virtual_courtroom_id does not exist or the hearing is already closed.)"
          }
        }
      },
      "delete": {
        "operationId": "deleteHearing",
        "description": "Delete single hearing",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          }
        }
      }
    },
    "/hearing/{virtual_courtroom_id}/start": {
      "post": {
        "operationId": "startHearing",
        "description": "Starts the hearing, triggers related events and operations.",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          }
        ],
        "responses": {
          "202": {
            "description": "Start hearing backend processess"
          },
          "409": {
            "description": "The hearing is started/starting."
          }
        }
      }
    },
    "/hearing/{virtual_courtroom_id}/transfer": {
      "post": {
        "operationId": "transferParticipant",
        "description": "Transfer a participant between rooms",
        "tags": [
          "transfer"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          },
          {
            "name": "TransferParticipantParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/transferParticipantParams"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Participant transferred"
          },
          "400": {
            "description": "Data is malformed"
          }
        }
      }
    }
  },
  "definitions": {
    "createHearingParams": {
      "type": "object",
      "required": [
        "virtual_courtroom_id",
        "callback_uri"
      ],
      "properties": {
        "virtual_courtroom_id": {
          "type": "string",
          "description": "Unique hearing ID"
        },
        "callback_uri": {
          "type": "string",
          "description": "Callback uri"
        },
        "recording_enabled": {
          "type": "boolean",
          "description": "Should record conference"
        },
        "recording_url": {
          "type": "string",
          "description": "Recording url"
        },
        "streaming_enabled": {
          "type": "boolean",
          "description": "Should stream conference"
        },
        "streaming_url": {
          "type": "string",
          "description": "Streaming url"
        }
      }
    },
    "updateHearingParams": {
      "type": "object",
      "required": [
        "recording_enabled"
      ],
      "properties": {
        "recording_enabled": {
          "type": "boolean",
          "description": "Should record conference"
        }
      }
    },
    "hearing": {
      "type": "object",
      "properties": {
        "virtual_courtroom_id": {
          "type": "string",
          "description": "The conference's UUID",
          "format": "uuid"
        },
        "uris": {
          "$ref": "#/definitions/uris"
        }
      }
    },
    "uris": {
      "type": "object",
      "required": [
        "pexip_node",
        "judge",
        "admin",
        "participant"
      ],
      "properties": {
        "pexip_node": {
          "type": "string",
          "description": "URL of the pexip node"
        },
        "judge": {
          "type": "string",
          "description": "prepackaged URL for judge iframe"
        },
        "admin": {
          "type": "string",
          "description": "prepackaged URL for admin iframe"
        },
        "participant": {
          "type": "string",
          "description": "Webrtc URI for participants."
        }
      }
    },
    "testcall": {
      "type": "object",
      "required": [
        "score",
        "passed",
        "user_id"
      ],
      "properties": {
        "score": {
          "type": "integer",
          "description": "Test call score"
        },
        "passed": {
          "type": "boolean",
          "description": "Result derived from score"
        },
        "user_id": {
          "type": "string",
          "description": "User id associated with the score"
        }
      }
    },
    "transferParticipantParams": {
      "type": "object",
      "required": [
        "part_id",
        "to",
        "from"
      ],
      "properties": {
        "part_id": {
          "type": "string",
          "description": "Unique participant ID"
        },
        "to": {
          "type": "string",
          "description": "Room label transfering participant from"
        },
        "from": {
          "type": "string",
          "description": "Room label transfering participant to"
        }
      }
    }
  }
}

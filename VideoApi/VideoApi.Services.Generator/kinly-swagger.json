{
  "swagger": "2.0",
  "info": {
    "title": "Virtual Courtroom API",
    "version": "0.0.5",
    "description": "API for virtual court hearings"
  },
  "schemes": [
    "https"
  ],
  "basePath": "/virtual-court/api/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/hearing": {
      "post": {
        "operationId": "createHearing",
        "description": "Create a new hearing",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "name": "CreateHearingParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createHearingParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Hearing created",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Path"
              }
            },
            "schema": {
              "$ref": "#/definitions/hearing"
            }
          },
          "400": {
            "description": "Invalid format"
          },
          "409": {
            "description": "Meeting room already exists"
          }
        }
      },
      "get": {
        "operationId": "getHearings",
        "description": "Get multiple hearings",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "judge",
            "required": false,
            "type": "integer",
            "description": "Filter hearings on judge id takes precedence over admin"
          },
          {
            "in": "query",
            "name": "admin",
            "required": false,
            "type": "integer",
            "description": "Filter hearings on admin id"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hearings",
            "schema": {
              "type": "object",
              "required": [
                "hearings"
              ],
              "properties": {
                "hearings": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/hearing"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hearing/{virtual_courtroom_id}": {
      "get": {
        "operationId": "getHearing",
        "description": "Get single hearing",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Hearing object",
            "schema": {
              "$ref": "#/definitions/hearing"
            }
          },
          "404": {
            "description": "Hearing does not exist"
          }
        }
      },
      "patch": {
        "operationId": "updateHearing",
        "description": "Update single hearing",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          },
          {
            "name": "UpdateHearingParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateHearingParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Hearing does not exist - Invalid virtual_courtroom_id. (When virtual_courtroom_id does not exist or the hearing is already closed.)"
          }
        }
      },
      "delete": {
        "operationId": "deleteHearing",
        "description": "Delete single hearing",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          }
        }
      }
    },
    "/hearing/{virtual_courtroom_id}/start": {
      "post": {
        "operationId": "startHearing",
        "description": "Starts or resumes the hearing, triggers related events and operations.",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          },
          {
            "name": "StartHearingParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/startHearingParams"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Start hearing backend processes"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "The hearing is started/starting."
          }
        }
      }
    },
    "/hearing/{virtual_courtroom_id}/pause": {
      "post": {
        "operationId": "pauseHearing",
        "description": "Pauses the hearing, triggers related events and operations.",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          }
        ],
        "responses": {
          "202": {
            "description": "Pause hearing backend processes"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/hearing/{virtual_courtroom_id}/end": {
      "post": {
        "operationId": "endHearing",
        "description": "Ends the hearing, triggers related events and operations.",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          }
        ],
        "responses": {
          "202": {
            "description": "End hearing backend processes"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/hearing/{virtual_courtroom_id}/assistance": {
      "post": {
        "operationId": "technicalAssistance",
        "description": "Suspends the hearing whilst awaiting technical assistance, triggers related events and operations.",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          }
        ],
        "responses": {
          "202": {
            "description": "Requested technical assistance"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/hearing/{virtual_courtroom_id}/transfer": {
      "post": {
        "operationId": "transferParticipant",
        "description": "Transfer a participant between rooms",
        "tags": [
          "transfer"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          },
          {
            "name": "TransferParticipantParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/transferParticipantParams"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Participant transferred"
          },
          "400": {
            "description": "Data is malformed"
          }
        }
      }
    },
    "/hearing/{virtual_courtroom_id}/consultation-room":  {
      "post": {
        "operationId": "createConsultationRoom",
        "description": "Create consultation room",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          },
          {
            "name": "CreateConsultationRoomParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createConsultationRoomParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Participant transferred",
            "schema": {
              "$ref": "#/definitions/createConsultationRoomResponse"
            }
          },
          "400": {
            "description": "Data is malformed"
          }
        }
      }
    },
    "/hearing/{virtual_courtroom_id}/participant-room":  {
      "post": {
        "operationId": "createParticipantRoom",
        "description": "Create participant room",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          },
          {
            "name": "CreateParticipantRoomParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createParticipantRoomParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New participant room",
            "schema": {
              "$ref": "#/definitions/bookedParticipantRoomResponse"
            }
          },
          "400": {
            "description": "Data is malformed"
          }
        }
      },
      "get": {
        "operationId": "getParticipantRooms",
        "description": "Get participant rooms for hearing",
        "tags": [
          "hearing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "virtual_courtroom_id",
            "type": "string",
            "required": true,
            "description": "Hearing ID"
          }
        ],
        "responses": {
          "200": {
            "description": "All participant rooms",
            "schema": {
              "$ref": "#/definitions/listParticipantRoomResponse"
            }
          },
          "400": {
            "description": "Data is malformed"
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "healthCheck",
        "description": "Check API health",
        "tags": [
          "Health Check"
        ],
        "responses": {
          "200": {
            "description": "Health Check",
            "schema": {
              "$ref": "#/definitions/healthCheckResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "createHearingParams": {
      "type": "object",
      "required": [
        "virtual_courtroom_id",
        "callback_uri"
      ],
      "properties": {
        "virtual_courtroom_id": {
          "type": "string",
          "description": "Unique hearing ID"
        },
        "callback_uri": {
          "type": "string",
          "description": "Callback uri"
        },
        "recording_enabled": {
          "type": "boolean",
          "description": "Should record conference"
        },
        "recording_url": {
          "type": "string",
          "description": "Recording url"
        },
        "streaming_enabled": {
          "type": "boolean",
          "description": "Should stream conference"
        },
        "streaming_url": {
          "type": "string",
          "description": "Streaming url"
        },
        "jvs_endpoint": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/endpoint"
          }
        }
      }
    },
    "updateHearingParams": {
      "type": "object",
      "required": [
        "recording_enabled",
        "jvs_endpoint"
      ],
      "properties": {
        "recording_enabled": {
          "type": "boolean",
          "description": "Should record conference"
        },
        "jvs_endpoint": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/endpoint"
          }
        }
      }
    },
    "startHearingParams": {
      "type": "object",
      "required": [
        "hearing_layout"
      ],
      "properties": {
        "hearing_layout": {
          "allOf": [
            {
              "$ref": "#/definitions/layout"
            }
          ]
        }
      }
    },
    "hearing": {
      "type": "object",
      "properties": {
        "virtual_courtroom_id": {
          "type": "string",
          "description": "The conference's UUID",
          "format": "uuid"
        },
        "telephone_conference_id": {
          "description": "The public switched telephone network pin",
          "type": "string"
        },
        "uris": {
          "$ref": "#/definitions/uris"
        }
      }
    },
    "uris": {
      "type": "object",
      "required": [
        "pexip_node",
        "admin",
        "participant"
      ],
      "properties": {
        "pexip_node": {
          "type": "string",
          "description": "URL of the pexip node"
        },
        "admin": {
          "type": "string",
          "description": "prepackaged URL for admin iframe"
        },
        "participant": {
          "type": "string",
          "description": "Webrtc URI for participants."
        }
      }
    },
    "testcall": {
      "type": "object",
      "required": [
        "score",
        "passed",
        "user_id"
      ],
      "properties": {
        "score": {
          "type": "integer",
          "description": "Test call score"
        },
        "passed": {
          "type": "boolean",
          "description": "Result derived from score"
        },
        "user_id": {
          "type": "string",
          "description": "User id associated with the score"
        }
      }
    },
    "transferParticipantParams": {
      "type": "object",
      "required": [
        "part_id",
        "to",
        "from"
      ],
      "properties": {
        "part_id": {
          "type": "string",
          "description": "Unique participant ID"
        },
        "to": {
          "type": "string",
          "description": "Room label transfering participant from"
        },
        "from": {
          "type": "string",
          "description": "Room label transfering participant to"
        }
      }
    },
    "createConsultationRoomParams":  {
      "type": "object",
      "required": [
        "room_label_prefix"
      ],
      "properties": {
        "room_label_prefix": {
          "type": "string",
          "description": "Room label prefix"
        }
      }
    },
    "endpoint": {
      "type": "object",
      "required": [
        "address",
        "display_name",
        "pin"
      ],
      "properties": {
        "address": {
          "type": "string",
          "description": "The address or SIP"
        },
        "display_name": {
          "type": "string",
          "description": "The display name"
        },
        "pin": {
          "type": "string",
          "description": "The PIN"
        }
      }
    },
    "layout": {
      "enum": [
        "AUTOMATIC",
        "SINGLE",
        "FOUR_EQUAL",
        "ONE_PLUS_SEVEN",
        "TWO_PLUS_TWENTYONE"
      ],
      "type": "string"
    },
    "healthCheckResponse": {
      "type": "object",
      "properties": {
        "health_status": {
          "allOf": [
            {
              "$ref": "#/definitions/platformHealth"
            }
          ],
          "description": "The platform health"
        }
      }
    },
    "platformHealth": {
      "enum": [
        "HEALTHY",
        "UNHEALTHY"
      ],
      "type": "string"
    },
    "createConsultationRoomResponse": {
      "type": "object",
      "properties": {
        "room_label": {
          "type": "string"
        }
      }
    },
    "createParticipantRoomParams": {
      "type": "object",
      "required": [
        "room_label_prefix",
        "audio_recording_url",
        "participant_type",
        "room_type",
        "tile_number",
        "participant_room_id",
        "display_name"
      ],
      "properties": {
        "room_label_prefix": {
          "type": "string"
        },
        "audio_recording_url": {
          "type": "string"
        },
        "participant_type": {
          "type": "string"
        },
        "room_type": {
          "type": "string"
        },
        "tile_number": {
          "type": "integer",
          "format": "int32"
        },
        "participant_room_id": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        }
      }
    },
    "bookedParticipantRoomResponse": {
      "type": "object",
      "properties": {
        "uris": {
          "$ref": "#/definitions/uris"
        },
        "display_name": {
          "type": "string"
        }
      }
    },
    "listParticipantRoomResponse": {
      "type": "object",
      "properties": {
        "bookedParticipantRooms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookedParticipantRoomResponse"
          }
        }
      }
    }
  }
}

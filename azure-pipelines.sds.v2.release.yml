name: $(Date:yyyyMMddHHmm)-$(Rev:r)

trigger:
  - master

pr: none

parameters:
  - name: environments
    type: object
    default:
      - ithc

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: fix-vh-templates-for-dotnet-8
      endpoint: hmcts

pool:
  vmImage: ubuntu-22.04

stages:
  #####################################################
  # Pre-Release Tasks. ################################
  - stage: Pre_Run_Tasks
    displayName: 'Pre-Release Tasks'
    variables:
      - template: variables/shared.yaml
    jobs:
      - job: Generate_Entity_Framework_Script
        displayName: 'Generate Entity Framework Script'
        steps:
          - template: templates/Database/EntityFramework/generate-script.yaml@azTemplates
            parameters:
              efVersion: ${{ variables.efDotnetToolVersion }}
              outputPath: $(Build.StagingDirectory)
              contextName: ${{ variables.efContextName }}
              workingPath: $(System.DefaultWorkingDirectory)/${{ variables.appName }}/${{ variables.appName }}
              projectName: ${{ variables.efProjectName }}
              migrationsPath: ${{ variables.appName }}/${{ variables.appName }}.DAL/Migrations
      - job: PublishAcceptanceTests
        displayName: Publish Acceptance Tests
        variables:
          projectPath: '${{ variables.appName }}/${{ variables.appName }}'
        steps:
          - template: templates\dotnet\publish-acceptance-tests.yml@azTemplates
            parameters:
              netVersion: ${{ variables.dotnetVersion }}
              vstsFeedId: '${{ variables.nuget_org_name }}/${{ variables.nuget_feed_name }}'
              coreProjectPath: $(projectPath)

  #####################################################
  # Build Docker Image & Push. ########################
  - stage: Docker_Build
    displayName: Docker Build
    variables:
      - template: variables/shared.yaml
        parameters:
          env: 'ithc'
          # env: ${{ variables.env }} when pipeline is ready use this line
    jobs:
      - job: Docker_Build
        displayName: 'Docker Build'
        steps:
          - checkout: self

          - bash: |
              sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.config
            displayName: Add NuGet Feed Authentication
            workingDirectory: ${{ variables.appName }}

          - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates
            parameters:
              azureSubscription: ${{ variables.acrSubscription }}
              acrName: ${{ variables.acrName }}
              repositoryName: ${{ variables.repositoryName }}

  #########################################
  # Push Helm Charts to Repo. #############
  - ${{each env in parameters.environments}}:
      - stage: Run_Entity_Framework_${{ env }}
        displayName: EF DAL Release ${{ env }}
        dependsOn:
          - Docker_Build
        variables:
          - template: variables/shared.yaml
            parameters:
              env: ${{ variables.env }}
        jobs:
          - job: Approve_EF_${{ env }}
            displayName: 'Approve to ${{ env }}'
            pool: server
            timeoutInMinutes: 10080 # 7 Days
            steps:
              - task: ManualValidation@0
                timeoutInMinutes: 10080 # 7 Days
                inputs:
                  instructions: 'Please Approve run to ${{ env }}'
                  onTimeout: 'reject'
          - job: Run_Entity_Framework_${{ env }}
            pool:
              vmImage: 'windows-latest'
            displayName: Run EF Migrations ${{ env }}
            variables:
              - template: variables/shared.yaml
                parameters:
                  env: ${{ env }}
            dependsOn: Approve_EF_${{ env }}
            steps:
              - download: current
                displayName: Download Sql Artifact


              - template: templates/Database/EntityFramework/run-entity-framework.yaml@azTemplates
                parameters:
                  sqlServerResourceGroup: ${{ variables.vhResourceGroup }}
                  sqlServerName: ${{ variables.vhSQLServerName }}
                  databaseName: ${{ variables.videoApiDbName }}
                  azureSubscription: ${{ variables.subscriptionName }}
                  sqlScriptLocation: '$(Pipeline.Workspace)/${{ variables.efContextName }}-$(Build.BuildId)/${{ variables.efContextName }}.sql'
                  kvfirewallRequired: false
                  kvName: ${{ variables.vhKeyVault }}
                  kvSqlPasswordSecret: ${{ variables.vhSqlPasswordSecret }}
                  kvSqlUsernameSecret: ${{ variables.vhSqlUsernameSecret }}


      - stage: Run_Helm_${{ env }}
        dependsOn: Run_Entity_Framework_${{ env }}
        jobs:
          - job: Approve_Helm_${{ env }}
            displayName: 'Approve to ${{ env }}'
            pool: server
            timeoutInMinutes: 10080 # 7 Days
            steps:
              - task: ManualValidation@0
                timeoutInMinutes: 10080 # 7 Days
                inputs:
                  instructions: 'Please Approve run to ${{ env }}'
                  onTimeout: 'reject'

          - job: Tag_And_Push_${{ env }}
            displayName: Tag and Push to ACR ${{ env }}
            variables:
              - template: variables/shared.yaml
                parameters:
                  env: ${{ env }}
            steps:
              - checkout: self

              - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
                parameters:
                  azureSubscription: ${{ variables.acrSubscription }}
                  acrName: ${{ variables.acrName }}
                  repositoryName: ${{ variables.repositoryName }}
                  imageName: '${{ variables.imageName }}'
                  imageTags:
                    - "ithc"

          - job: Push_Helm_${{ env }}
            displayName: Push Helm Chart ${{ env }}
            variables:
              - template: variables/shared.yaml
                parameters:
                  env: ${{ env }}
            steps:
              - checkout: self

              - template: templates\Github\get-app-token.yaml@azTemplates
                parameters:
                  privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
                  appId: $(gh_app_app_id)

              - template: templates\Github\push-to-helm-chart-repo.yaml@azTemplates
                parameters:
                  chartName: ${{ variables.chartName }}
                  chartPath: ${{ variables.chartPath }}
                  githubToken: $(githubappinstall.token)
                  githubUsername: $(gh_app_name)
                  githubEmail: '$(gh_app_app_id)+$(gh_app_name)[bot]@users.noreply.github.com'
                  subDirectory: ${{ variables.subDirectory }}

      - ${{ if ne(env, 'prod') }}:
          - stage: Acceptance_Tests_${{ env }}
            dependsOn: Run_Helm_${{ env }}
            displayName: Acceptance Tests ${{ env }}
            variables:
              - group: vh-video-api
              - template: variables/shared.yaml
                parameters:
                  env: ${{ env }}
              - name: dnsRecordName
                value: vh-${{ variables.git_repo_name }}
            jobs:
              - job: AcceptanceTests${{ env }}
                pool: VH Self Hosted
                displayName: Acceptance Tests ${{ env }}
                steps:
                  - template: templates/dotnet/run-acceptance-tests.yml@azTemplates
                    parameters:
                      environment: ${{ variables.env }}
                      azureSubscription: ${{ variables.subscriptionName }}
                      acceptanceTestSettings:
                        # todo: add acceptance test settings
                        - name: ApplicationInsights:ConnectionString
                          value: connectionstrings--applicationinsights
                          keyVaultName: vh-infra-core-${{ variables.env }}
                          secret: true
